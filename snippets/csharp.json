{
    "Parameter": {
        "prefix": "bl-param",
        "body": [
            "[Parameter]",
            "public ${1:string} ${2:MyParameter} { get; set; }"
        ]
    },
    "Parameter Capturing Unmatched Values ": {
        "prefix": "bl-param-unmatched",
        "body": [
            "[Parameter(CaptureUnmatchedValues = true)]",
            "public Dictionary<string, object> ${1:Attributes} { get; set; }"
        ]
    },
    "Cascading Parameter": {
        "prefix": "bl-param-cascading",
        "body": [
            "[CascadingParameter]",
            "${1:public} ${2:string} ${3:MyCascadingParameter} { get; set; }"
        ]
    },
    "AuthenticationStateTask Parameter": {
        "prefix": "bl-authStateTask",
        "body": [
            "[CascadingParameter]",
            "${1:private} Task<AuthenticationState> ${2:AuthenticationStateTask} { get; set; }"
        ]
    },
    "Component Code Behind": {
        "prefix": "bl-code-behind",
        "body": [
            "using System;",
            "using System.Collections.Generic;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace ${1:Namespace}",
            "{",
            "\tpublic partial class ${TM_FILENAME_BASE/(.*)\\..+$/$1/}",
            "\t{",
            "\t\t$0",
            "\t}",
            "}"
        ]
    },
    "SetParametersAsync": {
        "prefix": "bl-setParameters-async",
        "body": [
            "public override async Task SetParametersAsync(ParameterView parameters)",
            "{",
            "\t$0",
            "",
            "\tawait base.SetParametersAsync(parameters);",
            "}"
        ]
    },
    "OnInitialized": {
        "prefix": "bl-onInitialized",
        "body": [
            "protected override void OnInitialized()",
            "{",
            "\t$0",
            "}"
        ]
    },
    "OnInitializedAsync": {
        "prefix": "bl-onInitialized-async",
        "body": [
            "protected override async Task OnInitializedAsync()",
            "{",
            "\t$0",
            "}"
        ]
    },
    "OnParametersSet": {
        "prefix": "bl-onParametersSet",
        "body": [
            "protected override void OnParametersSet()",
            "{",
            "\t$0",
            "}"
        ]
    },
    "OnParametersSetAsync": {
        "prefix": "bl-onParametersSet-async",
        "body": [
            "protected override async Task OnParametersSetAsync()",
            "{",
            "\t$0",
            "}"
        ]
    },
    "OnAfterRender": {
        "prefix": "bl-onAfterRender",
        "body": [
            "protected override void OnAfterRender(bool firstRender)",
            "{",
            "\t$0",
            "}"
        ]
    },
    "OnAfterRenderAsync": {
        "prefix": "bl-onAfterRender-async",
        "body": [
            "protected override async Task OnAfterRenderAsync(bool firstRender)",
            "{",
            "\t$0",
            "}"
        ]
    },
    "ShouldRender": {
        "prefix": "bl-shouldRender",
        "body": [
            "protected override bool ShouldRender()",
            "{",
            "\t$0",
            "\treturn true;",
            "}"
        ]
    },
    "Event Handler": {
        "prefix": "bl-eventHandler",
        "body": [
            "${1:private} void ${2:Handle}(${3:MouseEventArgs} ${4:e})",
            "{",
            "\t$0",
            "}"
        ]
    },
    "Async Event Handler": {
        "prefix": "bl-eventHandler-async",
        "body": [
            "${1:private} async Task ${2:HandleAsync}(${3:MouseEventArgs} ${4:e})",
            "{",
            "\t$0",
            "}"
        ]
    },
    "Event Callback": {
        "prefix": "bl-eventCallback",
        "body": [
            "[Parameter]",
            "public EventCallback<${1:MouseEventArgs}> ${2:OnClick} { get; set; }"
        ]
    },
    "Event Callback On Parameter Changed": {
        "prefix": "bl-eventCallback-changed",
        "body": [
            "[Parameter]",
            "public ${1:string} ${2:MyParameter} { get; set; }",
            "",
            "[Parameter]",
            "public EventCallback<$1> $2Changed { get; set; }"
        ]
    },
    "Invoke JavaScript Function": {
        "prefix": "bl-js-invoke",
        "body": [
            "await ${1:JSRuntime}.InvokeAsync<${2:object}>(${3:\"identifier\"}, ${4:args});"
        ]
    },
    "Notifier Service": {
        "prefix": "bl-notifier-service",
        "body": [
            "public class ${1:${TM_FILENAME_BASE}}",
            "{",
            "\tpublic async Task ${2:Update}(${3:string key, int value})",
            "\t{",
            "\t\tif ($4 != null)",
            "\t\t{",
            "\t\t\tawait $4.Invoke(${5:key, value});",
            "\t\t}",
            "\t}",
            "",
            "\tpublic event Func<${6:string, int}, Task> ${4:Notify};",
            "}"
        ]
    }
}